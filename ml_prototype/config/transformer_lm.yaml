seed_everything: null
trainer:
  precision: 16-mixed
  max_epochs: 30
  logger:
    - class_path: lightning.pytorch.loggers.WandbLogger
      init_args:
        project: dummy_model
        name: bpe216-ln-lp-b512-t384-d512-h4-l4-lr5e-4-dr0.1

  callbacks:
    - class_path: lm.model.DummyCallback
    - class_path: lm.model.TorchScriptCallback
      init_args:
        config:
          batch_size: &batch_size 512
          seq_len: &seq_len 384
          embed_dim: &embed_dim 512
          num_heads: &num_heads 4
          num_layers: &num_layers 4
          dropout_ratio: &dropout_ratio 0.1

          use_position_embedding: &use_position_embedding true
          pos_embedding_type: simple
          use_custom_attention: false

          vocab_size: &vocab_size 256  # for bpe tokenizer
          # vocab_size: &vocab_size 216  # for char tokenizer
          save_every_epoch: 5


model:
  class_path: lm.model.Seq2SeqLM
  init_args:
    model:
      class_path: lm.module.TransformerLM
      init_args:
        config:
          vocab_size: *vocab_size
          seq_len: *seq_len
          embed_dim: *embed_dim
          num_heads: *num_heads
          num_layers: *num_layers
          batch_first: true
          norm_first: true
          dropout_ratio: *dropout_ratio
          use_position_embedding: *use_position_embedding
          vocab_size: *vocab_size
    loss:
      class_path: torch.nn.CrossEntropyLoss
    vocab_size: *vocab_size
    

data:
  class_path: lm.data_module.InMemoryDataModule
  init_args:
    config:
      data_path: ./data/
      samples_per_epoch: 100000
      batch_size: *batch_size
      seq_len: *seq_len
    tokenizer:
      # class_path: lm.tokenizer.NaiveTokenizer
      class_path: lm.tokenizer.BytePairTokenizer
      init_args:
        config:
          token_folder_path: ./tokenizer/bpe-256
          text_folder_path: ./data
          vocab_size: *vocab_size
          min_frequency: 10


optimizer:
  class_path: torch.optim.AdamW
  init_args:
    lr: 0.0005
    weight_decay: 0.01


lr_scheduler:
      class_path: torch.optim.lr_scheduler.StepLR
      init_args:
        step_size: 5
        gamma: 0.8
        verbose: True